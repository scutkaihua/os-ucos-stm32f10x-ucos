; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_it.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\outlib -I..\app\inc -I..\ucos\core -I..\ucos\config -I..\ucos\cpu -I..\ucos\port -I..\ucos\lib -I..\app\app -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F10x -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_FULL_ASSERT --omf_browse=.\obj\stm32f10x_it.crf ..\app\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;79       */
;;;80     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;81     {
;;;82       /* Go to infinite loop when Bus Fault exception occurs */
;;;83       while (1)
000002  e7fe              B        |L1.2|
;;;84       {
;;;85       }
;;;86     }
;;;87     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;114      */
;;;115    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;116    {
;;;117    }
;;;118    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;53       */
;;;54     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;55     {
;;;56       /* Go to infinite loop when Hard Fault exception occurs */
;;;57       while (1)
000002  e7fe              B        |L3.2|
;;;58       {
;;;59       }
;;;60     }
;;;61     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;66       */
;;;67     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;68     {
;;;69       /* Go to infinite loop when Memory Manage exception occurs */
;;;70       while (1)
000002  e7fe              B        |L4.2|
;;;71       {
;;;72       }
;;;73     }
;;;74     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;44       */
;;;45     void NMI_Handler(void)
000000  4770              BX       lr
;;;46     {
;;;47     }
;;;48     
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;105      */
;;;106    void SVC_Handler(void)
000000  4770              BX       lr
;;;107    {
;;;108    }
;;;109    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;134      */
;;;135    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;136    {
;;;137    	OSIntEnter(); 	 //用于统计中断的嵌套层数，对嵌套层数+1
000002  f7fffffe          BL       OSIntEnter
;;;138    	OSTimeTick();	   //统计时间，遍历任务，对延时任务计时减1
000006  f7fffffe          BL       OSTimeTick
;;;139    	OSIntExit();	   //对嵌套层数减1，在退出中断前启动任务调度
00000a  f7fffffe          BL       OSIntExit
;;;140    }
00000e  bd10              POP      {r4,pc}
;;;141    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;92       */
;;;93     void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L8.2|
;;;94     {
;;;95       /* Go to infinite loop when Usage Fault exception occurs */
;;;96       while (1)
000002  e7fe              B        |L8.2|
;;;97       {
;;;98       }
;;;99     }
;;;100    
                          ENDP

