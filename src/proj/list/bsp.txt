; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\outlib -I..\app\inc -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F10x -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_FULL_ASSERT --omf_browse=.\obj\bsp.crf ..\app\bsp.c]
                          THUMB

                          AREA ||i.SysTick_Config||, CODE, READONLY, ALIGN=2

                  SysTick_Config PROC
;;;1542    */
;;;1543   __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
000000  b530              PUSH     {r4,r5,lr}
;;;1544   {
000002  4601              MOV      r1,r0
;;;1545     if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
000004  1e48              SUBS     r0,r1,#1
000006  f1b07f80          CMP      r0,#0x1000000
00000a  d301              BCC      |L1.16|
00000c  2001              MOVS     r0,#1
                  |L1.14|
;;;1546   
;;;1547     SysTick->LOAD  = ticks - 1;                                  /* set reload register */
;;;1548     NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
;;;1549     SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
;;;1550     SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
;;;1551                      SysTick_CTRL_TICKINT_Msk   |
;;;1552                      SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
;;;1553     return (0);                                                  /* Function successful */
;;;1554   }
00000e  bd30              POP      {r4,r5,pc}
                  |L1.16|
000010  1e48              SUBS     r0,r1,#1              ;1547
000012  f04f22e0          MOV      r2,#0xe000e000        ;1547
000016  6150              STR      r0,[r2,#0x14]         ;1547
000018  1750              ASRS     r0,r2,#29             ;1548
00001a  220f              MOVS     r2,#0xf               ;1548
00001c  2800              CMP      r0,#0                 ;1548
00001e  da07              BGE      |L1.48|
000020  0713              LSLS     r3,r2,#28             ;1548
000022  0e1d              LSRS     r5,r3,#24             ;1548
000024  4b09              LDR      r3,|L1.76|
000026  f000040f          AND      r4,r0,#0xf            ;1548
00002a  1f24              SUBS     r4,r4,#4              ;1548
00002c  551d              STRB     r5,[r3,r4]            ;1548
00002e  e003              B        |L1.56|
                  |L1.48|
000030  0713              LSLS     r3,r2,#28             ;1548
000032  0e1c              LSRS     r4,r3,#24             ;1548
000034  4b06              LDR      r3,|L1.80|
000036  541c              STRB     r4,[r3,r0]            ;1548
                  |L1.56|
000038  bf00              NOP                            ;1548
00003a  2000              MOVS     r0,#0                 ;1549
00003c  f04f22e0          MOV      r2,#0xe000e000        ;1549
000040  6190              STR      r0,[r2,#0x18]         ;1549
000042  2007              MOVS     r0,#7                 ;1550
000044  6110              STR      r0,[r2,#0x10]         ;1550
000046  2000              MOVS     r0,#0                 ;1553
000048  e7e1              B        |L1.14|
;;;1555   
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      0xe000ed18
                  |L1.80|
                          DCD      0xe000e400

                          AREA ||i.SysTick_init||, CODE, READONLY, ALIGN=2

                  SysTick_init PROC
;;;7      /*配置SysTick定时器*/
;;;8      void SysTick_init(void)
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10       /* 初始化并使能SysTick定时器 */
;;;11       SysTick_Config(SystemCoreClock/OSCfg_TickRate_Hz);
000002  480b              LDR      r0,|L2.48|
000004  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000006  490b              LDR      r1,|L2.52|
000008  6809              LDR      r1,[r1,#0]  ; OSCfg_TickRate_Hz
00000a  fbb0f4f1          UDIV     r4,r0,r1
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       SysTick_Config
;;;12       
;;;13       /*  配置1ms 中断一次，即os的频率为1000hz */
;;;14     	if (SysTick_Config(SystemCoreClock/OSCfg_TickRate_Hz))	
000014  4806              LDR      r0,|L2.48|
000016  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000018  4906              LDR      r1,|L2.52|
00001a  6809              LDR      r1,[r1,#0]  ; OSCfg_TickRate_Hz
00001c  fbb0f4f1          UDIV     r4,r0,r1
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       SysTick_Config
000026  b108              CBZ      r0,|L2.44|
;;;15     	{ 
;;;16     		/* Capture error */ 
;;;17     		while (1);
000028  bf00              NOP      
                  |L2.42|
00002a  e7fe              B        |L2.42|
                  |L2.44|
;;;18     	}
;;;19     }
00002c  bd10              POP      {r4,pc}
;;;20     
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
                          DCD      SystemCoreClock
                  |L2.52|
                          DCD      OSCfg_TickRate_Hz

                          AREA ||i.assert_param||, CODE, READONLY, ALIGN=1

                  assert_param PROC
;;;1      void assert_param(void*arg){}
000000  4770              BX       lr
;;;2      	
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\app\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_cd3a7be9____REV16|
#line 129 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_cd3a7be9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_cd3a7be9____REVSH|
#line 144
|__asm___5_bsp_c_cd3a7be9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
